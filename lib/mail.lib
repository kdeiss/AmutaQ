#! /bin/bash
# send mail from bash with pyzmail
# needs $TXT / $SUBJECT / $LOG as variables in calling script
# by k.deiss@it-userdesk.de

# V 0.0.1.15.7.14 initial release 
# V 0.0.2.29.9.14 logging (needs $LOG VAR)
# V 0.0.3.7.10.14 bugfix
# V 0.0.3.23.10.14 bugfix
# V 0.0.4.7.1.16retrz in case of error
# V 0.0.5.28.4.20 disable/enable control network
# V 0.0.6.7.10.20 add support for swaks smtp-client
# V 0.0.7.7.10.22 bugfix

let MAX_MAIL_TRIES=3

# Samples
# SUBJECT="`hostname` sample subject text"
# TXTFILE=""
# TXT="sample text"
# send_mail

# OR

# TXTFILE=$ERRTMP
# SUBJECT="`hostname` sample subject text"
# echo -e "bla bla ">$ERRTMP
# tail -n 18 $SOMEFILE >>$ERRTMP
# send_mail
# TXTFILE=""


CIFTOOL="/opt/AmutaQ!/tools/"
# CIFACTIVE=1 
# CIFINTERNALNET=eth1


#don't edit from here

CONFIGFILE="/opt/AmutaQ!/etc/pzymail.conf"

function send_mail()
{
    if [ ! -f $CONFIGFILE ] ; then
	echo "`date` ERR Mailsystem not configured!"
	return 1
    fi

    source $CONFIGFILE

    if [ -z $LOG ] ; then
	LOG="/tmp/sendmaillib.tmp"
	echo "`date` INF using temporary LOGFILE $LOG"
    fi

    #if we already have ready made textfile we take that
    if [ -z $TXTFILE ];then
	TXTFILE="/tmp/$$.tmp"
	echo -e $TXT > $TXTFILE
    else
	    echo "`date` INF sendmail using formated textfile: $TXTFILE" >> $LOG
    fi

    if [ -z $PZYMODE ] ; then
	PZYMODE="normal"
    fi

    #swaks tls handling (kd 10/10/22)
    if [ -z $SWAKSMODE ] ; then
	echo "# SWAKSMODE: Set TLS handling for swaks (tlso,tlsos,tlsc,tls)" >> $CONFIGFILE
	echo "# tlso => TLS optional" >> $CONFIGFILE
	echo "# tlsos => TLS optional strict, fails if TLS negotiation fails" >> $CONFIGFILE
	echo "# tlsc => TLS immediately on connect" >> $CONFIGFILE
	echo "# tls => force TLS" >> $CONFIGFILE
	echo "SWAKSMODE=tlso" >> $CONFIGFILE
	SWAKSMODE="tlso"
    fi


#    echo "`date` INF invoking pyzsendmail -m $PZYMODE -H $PZYHOST -p $PZYPORT -L $PZYUSER -P HIDDEN -f $PZYFROM -t $PZYTO -s $SUBJECT - $nw -T :@$TXTFILE" >> $LOG

    let rtryctr=1
    let MAILRST=1
#ah: support for swaks
    FROM=`echo "$PZYFROM"|grep -Eio '\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}\b'`
    which swaks 2>> /dev/null >> /dev/null
    SWAKS=$?
    which pyzsendmail 2>> /dev/null >> /dev/null
    PYZMAIL=$?

    #enable control net
    $CIFTOOL/cifon >> $LOG

    while [ $MAILRST -gt 0 ] ; do
	if [ $SWAKS -eq 0 ] ; then
	    echo "sendmode is $SWAKSMODE" >> $LOG
	    if [ -z $PZYPASS ] ; then
		#no auth required
		echo "`date` INF calling  swaks -S 2 -$SWAKSMODE -s $PZYHOST -p $PZYPORT                           --from $FROM --h-From "$PZYFROM" --to "$PZYTO" --h-Subject "$SUBJECT" --body $TXTFILE" >> $LOG
		swaks -S 2 -$SWAKSMODE -s $PZYHOST -p $PZYPORT                           --from $FROM --h-From "$PZYFROM" --to "$PZYTO" --h-Subject "$SUBJECT" --body $TXTFILE 2>> $LOG >> $LOG
	    else
		#auth required !
		echo "`date` INF calling swaks -S 2 -$SWAKSMODE -s $PZYHOST -p $PZYPORT -au $PZYUSER -ap PZYPASS --from $FROM --h-From "$PZYFROM" --to "$PZYTO" --h-Subject "$SUBJECT" --body $TXTFILE" >> $LOG
		swaks -S 2 -$SWAKSMODE -s $PZYHOST -p $PZYPORT -au $PZYUSER -ap $PZYPASS --from $FROM --h-From "$PZYFROM" --to "$PZYTO" --h-Subject "$SUBJECT" --body $TXTFILE 2>> $LOG >> $LOG
	    fi
	elif [ $PYZMAIL -eq 0 ] ; then
	    if [ -z $PZYPASS ] ; then
		#no auth required
		echo "`date` INF calling /usr/local/bin/pyzsendmail -m $PZYMODE -H $PZYHOST -p $PZYPORT                         -f "$PZYFROM" -t "$PZYTO" -s "$SUBJECT" -T :@"$TXTFILE"" >> $LOG
		/usr/local/bin/pyzsendmail -m $PZYMODE -H $PZYHOST -p $PZYPORT                         -f "$PZYFROM" -t "$PZYTO" -s "$SUBJECT" -T :@"$TXTFILE" 2>> $LOG >> $LOG
	    else
		#auth required !
		echo "`date` INF calling /usr/local/bin/pyzsendmail -m $PZYMODE -H $PZYHOST -p $PZYPORT -L $PZYUSER -P PZYPASS -f "$PZYFROM" -t "$PZYTO" -s "$SUBJECT" -T :@"$TXTFILE"" >> $LOG 
		/usr/local/bin/pyzsendmail -m $PZYMODE -H $PZYHOST -p $PZYPORT -L $PZYUSER -P $PZYPASS -f "$PZYFROM" -t "$PZYTO" -s "$SUBJECT" -T :@"$TXTFILE" 2>> $LOG >> $LOG
	    fi
	else
	    echo "`date` WAR Mail not sent - No Mailer found" >> $LOG
	fi
	MAILRST=$?
	if [ $MAILRST -eq 0 ] ; then
	    break
	else
	    # error during processing
	    if [ $MAX_MAIL_TRIES -gt $rtryctr ] ; then
		echo "`date` WAR Mail not sent - will retry. ($rtryctr of $MAX_MAIL_TRIES)" >> $LOG
		# wait 5 minutes
		sleep 300
	    else
		# we give up
		break
	    fi
	fi
	let rtryctr=$rtryctr+1
    done

    #disable control net
    $CIFTOOL/cifoff >> $LOG

    if [ $MAILRST -eq 0 ] ; then
	echo "`date` INF pyzmail sent ok.($MAILRST)" >> $LOG
    else
	echo "`date` ERR error sending  pyzmail.($MAILRST)" >> $LOG
    fi
    rm -f $TXTFILE
    return $MAILRST
}


#start
source $CONFIGFILE
if [ -z $LOG ] ; then
    echo "`date` WAR no valid LOG var."
    echo "`date` INF LIBFILE mail.lib included"
#else
#    echo "`date` INF LIBFILE mail.lib included" >> $LOG
fi
