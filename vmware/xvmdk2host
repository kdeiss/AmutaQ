#! /bin/bash
# restore VM's into esxi Host with vmktool in X
# by k.deiss@it-userdesk.de
# V 0.0.1.14.10.14 initial release
# V 0.0.2.27.10.14 bugfix
# V 0.0.3.1.1.16 allow selection of targerserver and datastore
# V 0.0.4.11.1.16 take the IP address from global configuration: BACKUPNETWORK_IP=192.168.125.24 / fixes
# V 0.0.5.11.7.16 more debug info
# V 0.0.6.24.7.16 bazaarvcb

TDATASTORE="datastore1" 	#Target Datastore in ESXI Server

source /opt/AmutaQ!/etc/AmutaQ!.conf


#don't edit

NFSDATASTORENAME="NFSTEMP"
P2DS="/vmfs/volumes"
ME=`ifconfig eth0 2>/dev/null|awk '/inet addr:/ {print $2}'|sed 's/addr://'`
CMDL="sshpass -p "$VMPASSWORD" ssh -o StrictHostKeyChecking=no $VMUSER@$VMHOST"
NFSTARGET=$DDUMBVOL
LOG="/var/log/vm_restore.log"
LLOG="/var/log/vm_restoretemp.log"
TMPSIG="/tmp/zenity-helper.sig" #communication with zenity helper
GTKPROGRESSBAR="/opt/AmutaQ!/vmware/zenity-helper"

echo $CMDL

# parsing datastore
tmpb="/tmp/dsi"
tmp=$tmpb.tmp
ztmp=$tmpb-zenity.tmp


##########################################################
#                    FUNCTIONS
##########################################################

function init-esxi-communication
{
get-vmversion
if [ $? -lt  2 ] ; then
    sel-datastore
    if [ ! $? -eq  0 ] ; then
	msg="No datastore selected!"
	echo $msg | tee -a $LOG
	zenity --error --text="$msg"
	exit 2
    fi
else
    msg="Can't contact ESXi Host $VMHOST / or wrong ESXi Version"
    echo $msg | tee -a $LOG
    zenity --error --text="$msg"
    exit 1
fi
}

# in case of multi-configuration we have to select the ESXi Host
function sel-host-config
{

# in case of multiple ESXi Hosts we have to use annither way to count the VMs
let f=0
let multisys=0
if [ -f /opt/AmutaQ!/etc/AmutaQ!.conf.0 ] ; then 
    let multisys=1
    echo "zenity --list --width=600 --height=400 --radiolist --title=\"Select Target Host\" --column="select" --column=\"No.\" --column=\"Address\"  \\" > $ztmp
    let f=0
    while [ $f -lt 10 ]; do
	if [ -f /opt/AmutaQ!/etc/AmutaQ!.conf.$f ];then
	    echo "FALSE $f `cat /opt/AmutaQ!/etc/AmutaQ!.conf.$f | grep VMHOST | cut -f 2 -d "="` \\" >> $ztmp
        else
            break
	fi
	let f=$f+1
    done
else
    let f=1
    echo "zenity --list --width=600 --height=400 --radiolist --title=\"Select Target Host\" --column="select" --column=\"No.\" --column=\"Address\"  \\" > $ztmp
    echo "FALSE $f `cat /opt/AmutaQ!/etc/AmutaQ!.conf|grep VMHOST | cut -f 2 -d "="` \\" >> $ztmp
fi

echo "$f Hosts found" | tee -a $LOG

SELCONF=`bash $ztmp`
echo "Selected Config:$SELCONF" | tee -a $LOG
if [ -z $SELCONF ] ; then
    msg="No ESXi Host selected - exit!" 
    echo $msg | tee -a $LOG
    zenity --error --text="$msg"
    rm $ztmp
    exit 1
else
    if [ $multisys -eq 1 ] ; then
        source /opt/AmutaQ!/etc/AmutaQ!.conf.$SELCONF
    else
        source /opt/AmutaQ!/etc/AmutaQ!.conf
    fi
    echo "VMHOST:$VMHOST selected." | tee -a $LOG
    # adapt cmdline
    CMDL="sshpass -p "$VMPASSWORD" ssh -o StrictHostKeyChecking=no $VMUSER@$VMHOST"
    rm $ztmp
fi
}

# try to contact the esxi host
# 0 supported esxi version
# 1 could connrct but no supported version
# 2 error calling ESXi
function get-vmversion
{
VMVERSTRG=`$CMDL vmware -v`
RST=$?
if [ ! $RST -eq 0 ] ; then
    echo "Error $RST calling ESXi Host!" | tee -a $LOG
    return 2
else
    echo "You are running $VMVERSTRG!" | tee -a $LOG
fi

ESX_VERSION=$(echo $VMVERSTRG | awk '{print $3}')
case "${ESX_VERSION}" in
    5.0.0|5.1.0)    VER=5;;
    4.0.0|4.1.0)    VER=4;;
    3.5.0|3i)       VER=3;;
    *)              echo "WAR you're not running ESX(i) 3.5, 4.x, 5.x! | tee -a $LOG";;
esac
if [ -z $VER ] ;then
    return 1
else
    return 0
fi
}

# zenity dialog which will set TDATASTORE to an valid target, if empty failure
function sel-datastore
{
date > $tmp
$CMDL vim-cmd hostsvc/datastore/listsummary >> $tmp
let dsctr=0
while read line
do
    echo $line | grep "vim.Datastore.Summary" > /dev/null
    if [ $? -eq 0 ] ;then
	#echo $line
	let dsctr=$dsctr+1
	date > $tmpb-$dsctr
    fi
    echo $line >> $tmpb-$dsctr
done < $tmp

let i=0
let GB=1024*1024*1024

#zenity radiolist begin
echo "zenity --list --width=600 --height=400 --radiolist --title=\"Select datastore on $VMHOST \" --column="select" --column=\"Name\" --column=\"Free\" --column=\"Capacity\" \\" > $ztmp

echo "we have $dsctr files to process"
while [ $i -le $dsctr ]
do
    #just get vmfs volumes
    cat $tmpb-$i | grep "type = \"VMFS\"" > /dev/null
    if [ $? -eq 0 ] ;then
	#name = "datastore1", capacity = 494726545408, freeSpace = 341779152896,
        echo "this datastore contains VMFS FS! ($i)"
	name=`cat $tmpb-$i | grep "name" | cut -f 2 -d "="|cut -f 1 -d ","`
	freespace=`cat $tmpb-$i | grep "freeSpace"| cut -f 2 -d "="|cut -f 1 -d ","`
	capacity=`cat $tmpb-$i | grep "capacity"| cut -f 2 -d "="|cut -f 1 -d ","`
	let freespace=`echo $freespace/$GB`
	let capacity=`echo $capacity/$GB`
	echo "FALSE $name \"$freespace GB\" \"$capacity GB\"  \\" >> $ztmp
    else
        echo "this datastore does not contain VMFS FS! ($i)"
    fi
    let i=$i+1
done

#cleanup
let i=0
while [ $i -le $dsctr ]
do
    rm $tmpb-$i
    let i=$i+1
done
rm $tmpb-$i
rm -f $tmp

# check rst
TDATASTORE=`bash $ztmp`
rm -f $ztmp
if [ -z $TDATASTORE ] ; then
    return 1
else 
    return 0
fi
}


function create_nfs_link()
{
echo "esxcfg-nas -a $NFSDATASTORENAME -o $ME -s $NFSTARGET" | tee -a $LOG
$CMDL "esxcfg-nas -a $NFSDATASTORENAME -o $ME -s $NFSTARGET" | tee -a $LOG
RST=$?
echo "RST OF NFS ADD:$RST" | tee -a $LOG

#check whether exist + writeable
echo "date > $P2DS/$NFSDATASTORENAME/date.txt" | tee -a $LOG
$CMDL "date > $P2DS/$NFSDATASTORENAME/date.txt"
RST=$?
#echo $RST
if [ ! $RST -eq 0 ] ; then
    return 1
fi

echo "NFS LINK $NFSDATASTORENAME OPERATIONAL" | tee -a $LOG
}


# mnt ddumbfs bazaar AmutaQ-XFCE-20141013171800
# we need part 3 and 4
function split_dir_name()
{
CURP=`pwd`
SAVEIFS=$IFS
IFS=$(echo -en "\n\b")
P1=`echo $CURP | cut -f 1 -d "/"`
P2=`echo $CURP | cut -f 2 -d "/"`
P3=`echo $CURP | cut -f 3 -d "/"`
P4=`echo $CURP | cut -f 4 -d "/"`
P5=`echo $CURP | cut -f 5 -d "/"`
IFS=$SAVEIFS
}


function restore_with_bazaar()
{
DATASTORE="[$TDATASTORE] /"
S=`pwd`
S1=`basename $S`
$BAZAARVCB restore -H $VMHOST -u $VMUSER -p $VMPASSWORD --listen 31053 --register $S1 $S "$DATASTORE" 2>&1 | tee -a $LOG
rst=$?
msg="`date` INF Terminating with $rst"
echo "$msg" | tee -a $LOG
exit $rst
}

function restore_with_vmkfstool()
{
NFSDATASTORENAME="NFSTEMP"
NFSTARGET=$DDUMBVOL

# try to get the ip of this machine
ME=$BACKUPNETWORK_IP
if [ -z $ME ] ; then
    # guessing ........
    ME=`ifconfig eth0 2>/dev/null|awk '/inet addr:/ {print $2}'|sed 's/addr://'`
    # deutsches system?
    if [ -z $ME ] ; then
	ME=`ifconfig eth0 2>/dev/null|awk '/inet Adresse:/ {print $2}'|sed 's/Adresse://'`
    fi
fi

pwd | grep "ddumbfs"
if [ $? -eq 0 ] ; then
    NFSDATASTORENAME="DDUMBFS_$ME"
    NFSTARGET=$DDUMBVOL
fi

pwd | grep "bufferdisk"
if [ $? -eq 0 ] ; then
    NFSDATASTORENAME="BUFFERDISK_$ME"
    NFSTARGET=`dirname $VMBACKUPTARGET`
fi

# ensure that the target is read/write
chmod 777 $NFSTARGET

echo "" >> $LOG
echo "" >> $LOG
msg="`date` INF $0 startup"
echo "$msg" | tee -a $LOG
echo "$msg" > $LLOG


msg="`date` INF using NFSDATASTORENAME: $NFSDATASTORENAME and NFSTARGET: $NFSTARGET for mount cmd on ESXi Host."
echo "$msg" | tee -a $LOG

msg="Mounting this machine ($ME) as NFSTARGET on $VMHOST"
create_nfs_link
if [ ! $? -eq 0 ] ; then
    msg="CAN'T MOUNT $ME ON $VMHOST !"
    echo $msg | tee -a $LOG
    zenity --error --title "Restore $P5" --text="$msg\n\nCheck logfile $LOG"
    exit 1
fi

split_dir_name

msg="`date` INF ALL PARMS COLLECTED!"
echo "$msg" | tee -a $LOG
echo "IP:$ME"
echo "TDATASTORE:$TDATASTORE"
echo "VMHOST $VMHOST"

msg="CREATE DIRECTORY $P2DS/$TDATASTORE/$P5 ON $VMHOST"
# if creation of directory fails it already exists, we have to stop!
$CMDL "mkdir $P2DS/$TDATASTORE/$P5"
if [ ! $? -eq 0 ] ; then
    echo "$msg FAILED" | tee -a $LOG
    zenity --error --title "Restore $P5" --text="$msg FAILED!\n\nCheck logfile $LOG"
    exit 1
fi
echo "$msg SUCCESS" | tee -a $LOG


msg="COPY VMX FILE TO $VMHOST: cp /vmfs/volumes/$NFSDATASTORENAME/$P4/$P5/*.vmx $P2DS/$TDATASTORE/$P5/"
$CMDL "cp /vmfs/volumes/$NFSDATASTORENAME/$P4/$P5/*.vmx $P2DS/$TDATASTORE/$P5/"

if [ ! $? -eq 0 ] ; then
    echo "$msg FAILED" | tee -a $LOG
    zenity --error --title "Restore $P5" --text="$msg FAILED!\n\nCheck logfile $LOG"
    exit 1
fi
echo "$msg SUCCESS" | tee -a $LOG


RSTVMKFS="`date` Start restore" 
for fn in $( ls -1 *.vmdk )
do
    echo $fn | grep "flat." > /dev/null
    if [ ! $? -eq 0 ] ; then
	msg="RESTORE FILE: $fn"
	echo "`date` $msg" | tee -a $LOG
	#echo $CMDL "/sbin/vmkfstools -i "\"/vmfs/volumes/$NFSDATASTORENAME/$P4/$P5/$fn\"" -a "\"lsilogic\"" -d \""thin\"" \"$P2DS/$TDATASTORE/$P5/$fn\""

        #prepare the log
	echo "" | tee -a $LOG
	echo "`date` $msg" | tee -a $LOG
	echo "Clone: 0% done." | tee -a $LOG

        #run progressbar in background
	$GTKPROGRESSBAR "$fn" &
	GTKPID=$!
	echo "GTKPID:$GTKPID" | tee -a $LOG
	echo "RUNNING: /sbin/vmkfstools -i "\"/vmfs/volumes/$NFSDATASTORENAME/$P4/$P5/$fn\"" -a "\"lsilogic\"" -d \""thin\"" \"$P2DS/$TDATASTORE/$P5/$fn\"" | tee -a $LOG 
	$CMDL "/sbin/vmkfstools -i "\"/vmfs/volumes/$NFSDATASTORENAME/$P4/$P5/$fn\"" -a "\"lsilogic\"" -d \""thin\"" \"$P2DS/$TDATASTORE/$P5/$fn\"" | tee -a $LOG 
	VMKFSRST=${PIPESTATUS[0]}
        #this will kill the gtk progressbar
	echo 0 >$TMPSIG
	#kill -9 $GTKPID 2>>$GTKPID >>$GTKPID
	echo "Clone: 100% done." | tee -a $LOG
	sleep 1
	echo "Clone: 100% done." | tee -a $LOG
	sleep 1

	if [ ! $VMKFSRST -eq 0 ] ; then 
	    echo "`date` $msg FAILED" | tee -a $LOG
	    RSTVMKFS="$RSTVMKFS\n`date` $msg FAILED"
	    zenity --error --title "Restore $P5" --text="$RSTVMKFS"
	    zenity --question --title "Delete Files" --text="DELETE $P2DS/$TDATASTORE/$P5 ?"
	    if [ $? -eq 0 ] ; then
		msg="Deleting of $P2DS/$TDATASTORE/$P5"
		$CMDL "rm -r  $P2DS/$TDATASTORE/$P5"
		if [ ! $? -eq 0 ] ; then
		    echo "$msg FAILED" | tee -a $LOG
		    zenity --width=600 --height=400 --error --title "Restore $P5" --text="$msg FAILED!\n\nCheck logfile $LOG"
		    exit 1
		else
		    echo "$msg SUCCESS" | tee -a $LOG
		    exit 1
		fi
	    fi
	    exit 1
	else
	    echo "`date` $msg SUCCESS" | tee -a $LOG
	    RSTVMKFS="$RSTVMKFS\n`date` $msg SUCCESS"
	fi
    fi
done

zenity --width=600 --height=400 --info --title "Restore $P5" --text="$RSTVMKFS"
msg="`date` End $0 "
echo "$msg" | tee -a $LOG
echo "$msg" >> $LLOG
}


##########################################################
#                    MAIN
##########################################################

#jan 2016

msg="`date` INF Startup $0 $1"
echo "$msg" | tee -a $LOG


sel-host-config
init-esxi-communication

restore_with_vmkfstool
#restore_with_bazaar
